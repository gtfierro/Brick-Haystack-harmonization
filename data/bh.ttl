@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix ph: <urn:project_haystack/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xeto: <urn:brick-haystack-xeto/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<urn:brick-haystack-xeto> a owl:Ontology ;
    owl:imports <http://www.w3.org/ns/shacl>,
        <https://brickschema.org/schema/Brick> .

xeto:infer_brick_rule_Brick_Active_Power_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Active_Power_Sensor ;
            sh:object brick:Active_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Active_Power_Sensor ;
            sh:object brick:Active_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Active_Power_Sensor ;
            sh:object brick:Active_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Active_Power_Sensor ;
            sh:object brick:Active_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Active_Power_Sensor ;
            sh:object brick:Active_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-active,
        ph:HasTag-electric,
        ph:HasTag-point,
        ph:HasTag-power,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Air_Enthalpy_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Air_Enthalpy_Sensor ;
            sh:object brick:Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Enthalpy_Sensor ;
            sh:object brick:Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Enthalpy_Sensor ;
            sh:object brick:Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Enthalpy_Sensor ;
            sh:object brick:Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-enthalpy,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Air_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Air_Flow_Sensor ;
            sh:object brick:Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Flow_Sensor ;
            sh:object brick:Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Flow_Sensor ;
            sh:object brick:Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Flow_Sensor ;
            sh:object brick:Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Air_Flow_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Air_Flow_Setpoint ;
            sh:object brick:Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Flow_Setpoint ;
            sh:object brick:Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Flow_Setpoint ;
            sh:object brick:Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Flow_Setpoint ;
            sh:object brick:Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Air_Quality_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Air_Quality_Sensor ;
            sh:object brick:Air_Quality_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Quality_Sensor ;
            sh:object brick:Air_Quality_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Quality_Sensor ;
            sh:object brick:Air_Quality_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Quality_Sensor ;
            sh:object brick:Air_Quality_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-point,
        ph:HasTag-quality,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Air_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Air_Temperature_Sensor ;
            sh:object brick:Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Temperature_Sensor ;
            sh:object brick:Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Temperature_Sensor ;
            sh:object brick:Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Temperature_Sensor ;
            sh:object brick:Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Air_Temperature_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Air_Temperature_Setpoint ;
            sh:object brick:Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Temperature_Setpoint ;
            sh:object brick:Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Temperature_Setpoint ;
            sh:object brick:Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Air_Temperature_Setpoint ;
            sh:object brick:Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Alarm a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Alarm ;
            sh:object brick:Alarm ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Alarm ;
            sh:object brick:Alarm ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-alarm,
        ph:HasTag-point .

xeto:infer_brick_rule_Brick_Average_Zone_Air_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Average_Zone_Air_Temperature_Sensor ;
            sh:object brick:Average_Zone_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Average_Zone_Air_Temperature_Sensor ;
            sh:object brick:Average_Zone_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Average_Zone_Air_Temperature_Sensor ;
            sh:object brick:Average_Zone_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Average_Zone_Air_Temperature_Sensor ;
            sh:object brick:Average_Zone_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Average_Zone_Air_Temperature_Sensor ;
            sh:object brick:Average_Zone_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Average_Zone_Air_Temperature_Sensor ;
            sh:object brick:Average_Zone_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-avg,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp,
        ph:HasTag-zone .

xeto:infer_brick_rule_Brick_Building_Air_Static_Pressure_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Building_Air_Static_Pressure_Sensor ;
            sh:object brick:Building_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Building_Air_Static_Pressure_Sensor ;
            sh:object brick:Building_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Building_Air_Static_Pressure_Sensor ;
            sh:object brick:Building_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Building_Air_Static_Pressure_Sensor ;
            sh:object brick:Building_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Building_Air_Static_Pressure_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Building_Air_Static_Pressure_Setpoint ;
            sh:object brick:Building_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Building_Air_Static_Pressure_Setpoint ;
            sh:object brick:Building_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Building_Air_Static_Pressure_Setpoint ;
            sh:object brick:Building_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Building_Air_Static_Pressure_Setpoint ;
            sh:object brick:Building_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Bypass_Water_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Bypass_Water_Flow_Sensor ;
            sh:object brick:Bypass_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Bypass_Water_Flow_Sensor ;
            sh:object brick:Bypass_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Bypass_Water_Flow_Sensor ;
            sh:object brick:Bypass_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Bypass_Water_Flow_Sensor ;
            sh:object brick:Bypass_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Bypass_Water_Flow_Sensor ;
            sh:object brick:Bypass_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-bypass,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_CO2_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:CO2_Sensor ;
            sh:object brick:CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:CO2_Sensor ;
            sh:object brick:CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:CO2_Sensor ;
            sh:object brick:CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:CO2_Sensor ;
            sh:object brick:CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:CO2_Sensor ;
            sh:object brick:CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-co2,
        ph:HasTag-point,
        ph:HasTag-quality,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_CO2_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:CO2_Setpoint ;
            sh:object brick:CO2_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:CO2_Setpoint ;
            sh:object brick:CO2_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:CO2_Setpoint ;
            sh:object brick:CO2_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-co2,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Chilled_Water_Differential_Pressure_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:object brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:object brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:object brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:object brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:object brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:object brick:Chilled_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-chilled,
        ph:HasTag-delta,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Chilled_Water_Differential_Pressure_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Chilled_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-chilled,
        ph:HasTag-delta,
        ph:HasTag-differential,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Chilled_Water_Differential_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:object brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:object brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:object brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:object brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:object brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:object brick:Chilled_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-chilled,
        ph:HasTag-delta,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Chilled_Water_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Flow_Sensor ;
            sh:object brick:Chilled_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Flow_Sensor ;
            sh:object brick:Chilled_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Flow_Sensor ;
            sh:object brick:Chilled_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Flow_Sensor ;
            sh:object brick:Chilled_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Flow_Sensor ;
            sh:object brick:Chilled_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-chilled,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Chilled_Water_Flow_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Flow_Setpoint ;
            sh:object brick:Chilled_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Flow_Setpoint ;
            sh:object brick:Chilled_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Flow_Setpoint ;
            sh:object brick:Chilled_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Flow_Setpoint ;
            sh:object brick:Chilled_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Flow_Setpoint ;
            sh:object brick:Chilled_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-chilled,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Chilled_Water_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Temperature_Sensor ;
            sh:object brick:Chilled_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Temperature_Sensor ;
            sh:object brick:Chilled_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Temperature_Sensor ;
            sh:object brick:Chilled_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Temperature_Sensor ;
            sh:object brick:Chilled_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Chilled_Water_Temperature_Sensor ;
            sh:object brick:Chilled_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-chilled,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Command a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Command ;
            sh:object brick:Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Command ;
            sh:object brick:Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cmd,
        ph:HasTag-point .

xeto:infer_brick_rule_Brick_Communication_Loss_Alarm a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Communication_Loss_Alarm ;
            sh:object brick:Communication_Loss_Alarm ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Communication_Loss_Alarm ;
            sh:object brick:Communication_Loss_Alarm ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-alarm,
        ph:HasTag-point .

xeto:infer_brick_rule_Brick_Condensate_Leak_Alarm a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Condensate_Leak_Alarm ;
            sh:object brick:Condensate_Leak_Alarm ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Condensate_Leak_Alarm ;
            sh:object brick:Condensate_Leak_Alarm ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Condensate_Leak_Alarm ;
            sh:object brick:Condensate_Leak_Alarm ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Condensate_Leak_Alarm ;
            sh:object brick:Condensate_Leak_Alarm ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-alarm,
        ph:HasTag-condensate,
        ph:HasTag-point,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Condenser_Water_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Condenser_Water_Flow_Sensor ;
            sh:object brick:Condenser_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Condenser_Water_Flow_Sensor ;
            sh:object brick:Condenser_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Condenser_Water_Flow_Sensor ;
            sh:object brick:Condenser_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Condenser_Water_Flow_Sensor ;
            sh:object brick:Condenser_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Condenser_Water_Flow_Sensor ;
            sh:object brick:Condenser_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-condenser,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Condenser_Water_Flow_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Condenser_Water_Flow_Setpoint ;
            sh:object brick:Condenser_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Condenser_Water_Flow_Setpoint ;
            sh:object brick:Condenser_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Condenser_Water_Flow_Setpoint ;
            sh:object brick:Condenser_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Condenser_Water_Flow_Setpoint ;
            sh:object brick:Condenser_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Condenser_Water_Flow_Setpoint ;
            sh:object brick:Condenser_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-condenser,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Cooling_Command a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Cooling_Command ;
            sh:object brick:Cooling_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Command ;
            sh:object brick:Cooling_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Command ;
            sh:object brick:Cooling_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cmd,
        ph:HasTag-cool,
        ph:HasTag-point .

xeto:infer_brick_rule_Brick_Cooling_Discharge_Air_Flow_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-cooling,
        ph:HasTag-discharge,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Cooling_Discharge_Air_Temperature_Deadband_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-cool,
        ph:HasTag-cooling,
        ph:HasTag-discharge,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Cooling_Enable_Command a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Cooling_Enable_Command ;
            sh:object brick:Cooling_Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Enable_Command ;
            sh:object brick:Cooling_Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Enable_Command ;
            sh:object brick:Cooling_Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Enable_Command ;
            sh:object brick:Cooling_Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Enable_Command ;
            sh:object brick:Cooling_Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cmd,
        ph:HasTag-cooling,
        ph:HasTag-enable,
        ph:HasTag-point,
        ph:HasTag-run .

xeto:infer_brick_rule_Brick_Cooling_Temperature_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Cooling_Temperature_Setpoint ;
            sh:object brick:Cooling_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Temperature_Setpoint ;
            sh:object brick:Cooling_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Temperature_Setpoint ;
            sh:object brick:Cooling_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Cooling_Temperature_Setpoint ;
            sh:object brick:Cooling_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cool,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Current_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Current_Sensor ;
            sh:object brick:Current_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Current_Sensor ;
            sh:object brick:Current_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Current_Sensor ;
            sh:object brick:Current_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-current,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_DC_Bus_Voltage_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:DC_Bus_Voltage_Sensor ;
            sh:object brick:DC_Bus_Voltage_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:DC_Bus_Voltage_Sensor ;
            sh:object brick:DC_Bus_Voltage_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:DC_Bus_Voltage_Sensor ;
            sh:object brick:DC_Bus_Voltage_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:DC_Bus_Voltage_Sensor ;
            sh:object brick:DC_Bus_Voltage_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-dc,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-volt .

xeto:infer_brick_rule_Brick_Dewpoint_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Dewpoint_Sensor ;
            sh:object brick:Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Dewpoint_Sensor ;
            sh:object brick:Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Dewpoint_Sensor ;
            sh:object brick:Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-dewpoint,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Differential_Pressure_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Differential_Pressure_Sensor ;
            sh:object brick:Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Differential_Pressure_Sensor ;
            sh:object brick:Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Differential_Pressure_Sensor ;
            sh:object brick:Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Differential_Pressure_Sensor ;
            sh:object brick:Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-delta,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Differential_Pressure_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Differential_Pressure_Setpoint ;
            sh:object brick:Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Differential_Pressure_Setpoint ;
            sh:object brick:Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Differential_Pressure_Setpoint ;
            sh:object brick:Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Differential_Pressure_Setpoint ;
            sh:object brick:Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Differential_Pressure_Setpoint ;
            sh:object brick:Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-delta,
        ph:HasTag-differential,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Differential_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Differential_Setpoint ;
            sh:object brick:Differential_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Differential_Setpoint ;
            sh:object brick:Differential_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Differential_Setpoint ;
            sh:object brick:Differential_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-differential,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Discharge_Air_Dewpoint_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Dewpoint_Sensor ;
            sh:object brick:Discharge_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Dewpoint_Sensor ;
            sh:object brick:Discharge_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Dewpoint_Sensor ;
            sh:object brick:Discharge_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Dewpoint_Sensor ;
            sh:object brick:Discharge_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Dewpoint_Sensor ;
            sh:object brick:Discharge_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Dewpoint_Sensor ;
            sh:object brick:Discharge_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Dewpoint_Sensor ;
            sh:object brick:Discharge_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-dewPoint,
        ph:HasTag-dewpoint,
        ph:HasTag-discharge,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Discharge_Air_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Flow_Sensor ;
            sh:object brick:Discharge_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Flow_Sensor ;
            sh:object brick:Discharge_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Flow_Sensor ;
            sh:object brick:Discharge_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Flow_Sensor ;
            sh:object brick:Discharge_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Flow_Sensor ;
            sh:object brick:Discharge_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Discharge_Air_Flow_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Flow_Setpoint ;
            sh:object brick:Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Flow_Setpoint ;
            sh:object brick:Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Flow_Setpoint ;
            sh:object brick:Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Flow_Setpoint ;
            sh:object brick:Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Flow_Setpoint ;
            sh:object brick:Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Discharge_Air_Humidity_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Humidity_Sensor ;
            sh:object brick:Discharge_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Humidity_Sensor ;
            sh:object brick:Discharge_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Humidity_Sensor ;
            sh:object brick:Discharge_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Humidity_Sensor ;
            sh:object brick:Discharge_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Humidity_Sensor ;
            sh:object brick:Discharge_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-humidity,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Discharge_Air_Humidity_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Humidity_Setpoint ;
            sh:object brick:Discharge_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Humidity_Setpoint ;
            sh:object brick:Discharge_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Humidity_Setpoint ;
            sh:object brick:Discharge_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Humidity_Setpoint ;
            sh:object brick:Discharge_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Humidity_Setpoint ;
            sh:object brick:Discharge_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-humidity,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Discharge_Air_Static_Pressure_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Static_Pressure_Sensor ;
            sh:object brick:Discharge_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Static_Pressure_Sensor ;
            sh:object brick:Discharge_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Static_Pressure_Sensor ;
            sh:object brick:Discharge_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Static_Pressure_Sensor ;
            sh:object brick:Discharge_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Static_Pressure_Sensor ;
            sh:object brick:Discharge_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Discharge_Air_Static_Pressure_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Static_Pressure_Setpoint ;
            sh:object brick:Discharge_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Static_Pressure_Setpoint ;
            sh:object brick:Discharge_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Static_Pressure_Setpoint ;
            sh:object brick:Discharge_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Static_Pressure_Setpoint ;
            sh:object brick:Discharge_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Static_Pressure_Setpoint ;
            sh:object brick:Discharge_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Discharge_Air_Temperature_Cooling_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Cooling_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-cool,
        ph:HasTag-discharge,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Discharge_Air_Temperature_Deadband_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Discharge_Air_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Sensor ;
            sh:object brick:Discharge_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Sensor ;
            sh:object brick:Discharge_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Sensor ;
            sh:object brick:Discharge_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Sensor ;
            sh:object brick:Discharge_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Sensor ;
            sh:object brick:Discharge_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Discharge_Air_Temperature_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Temperature_Setpoint ;
            sh:object brick:Discharge_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Discharge_Air_Velocity_Pressure_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:object brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:object brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:object brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:object brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:object brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:object brick:Discharge_Air_Velocity_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor,
        ph:HasTag-velocity .

xeto:infer_brick_rule_Brick_Duration_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Duration_Sensor ;
            sh:object brick:Duration_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Duration_Sensor ;
            sh:object brick:Duration_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Duration_Sensor ;
            sh:object brick:Duration_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-duration,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Effective_Air_Temperature_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Effective_Air_Temperature_Setpoint ;
            sh:object brick:Effective_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Effective_Air_Temperature_Setpoint ;
            sh:object brick:Effective_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Effective_Air_Temperature_Setpoint ;
            sh:object brick:Effective_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Effective_Air_Temperature_Setpoint ;
            sh:object brick:Effective_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Effective_Air_Temperature_Setpoint ;
            sh:object brick:Effective_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-effective,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Effective_Zone_Air_Temperature_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:object brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:object brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:object brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:object brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:object brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:object brick:Effective_Zone_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-effective,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp,
        ph:HasTag-zone .

xeto:infer_brick_rule_Brick_Electric_Power_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Electric_Power_Sensor ;
            sh:object brick:Electric_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Electric_Power_Sensor ;
            sh:object brick:Electric_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Electric_Power_Sensor ;
            sh:object brick:Electric_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Electric_Power_Sensor ;
            sh:object brick:Electric_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-electric,
        ph:HasTag-point,
        ph:HasTag-power,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Electrical_Power_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Electrical_Power_Sensor ;
            sh:object brick:Electrical_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Electrical_Power_Sensor ;
            sh:object brick:Electrical_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Electrical_Power_Sensor ;
            sh:object brick:Electrical_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Electrical_Power_Sensor ;
            sh:object brick:Electrical_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-elec,
        ph:HasTag-point,
        ph:HasTag-power,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Enable_Command a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Enable_Command ;
            sh:object brick:Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Enable_Command ;
            sh:object brick:Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Enable_Command ;
            sh:object brick:Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cmd,
        ph:HasTag-enable,
        ph:HasTag-point .

xeto:infer_brick_rule_Brick_Enable_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Enable_Status ;
            sh:object brick:Enable_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Enable_Status ;
            sh:object brick:Enable_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Enable_Status ;
            sh:object brick:Enable_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-enable,
        ph:HasTag-point,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Entering_Hot_Water_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:object brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:object brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:object brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:object brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:object brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:object brick:Entering_Hot_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-entering,
        ph:HasTag-hot,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Entering_Water_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Entering_Water_Flow_Sensor ;
            sh:object brick:Entering_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Water_Flow_Sensor ;
            sh:object brick:Entering_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Water_Flow_Sensor ;
            sh:object brick:Entering_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Water_Flow_Sensor ;
            sh:object brick:Entering_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Water_Flow_Sensor ;
            sh:object brick:Entering_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Water_Flow_Sensor ;
            sh:object brick:Entering_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-entering,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Entering_Water_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Entering_Water_Temperature_Sensor ;
            sh:object brick:Entering_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Water_Temperature_Sensor ;
            sh:object brick:Entering_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Water_Temperature_Sensor ;
            sh:object brick:Entering_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Water_Temperature_Sensor ;
            sh:object brick:Entering_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Entering_Water_Temperature_Sensor ;
            sh:object brick:Entering_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-entering,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Enthalpy_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Enthalpy_Sensor ;
            sh:object brick:Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Enthalpy_Sensor ;
            sh:object brick:Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Enthalpy_Sensor ;
            sh:object brick:Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-enthalpy,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Exhaust_Air_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Flow_Sensor ;
            sh:object brick:Exhaust_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Flow_Sensor ;
            sh:object brick:Exhaust_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Flow_Sensor ;
            sh:object brick:Exhaust_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Flow_Sensor ;
            sh:object brick:Exhaust_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Flow_Sensor ;
            sh:object brick:Exhaust_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-exhaust,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Exhaust_Air_Flow_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Flow_Setpoint ;
            sh:object brick:Exhaust_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Flow_Setpoint ;
            sh:object brick:Exhaust_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Flow_Setpoint ;
            sh:object brick:Exhaust_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Flow_Setpoint ;
            sh:object brick:Exhaust_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Flow_Setpoint ;
            sh:object brick:Exhaust_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-exhaust,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Exhaust_Air_Humidity_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Humidity_Sensor ;
            sh:object brick:Exhaust_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Humidity_Sensor ;
            sh:object brick:Exhaust_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Humidity_Sensor ;
            sh:object brick:Exhaust_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Humidity_Sensor ;
            sh:object brick:Exhaust_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Humidity_Sensor ;
            sh:object brick:Exhaust_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-exhaust,
        ph:HasTag-humidity,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Exhaust_Air_Static_Pressure_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Static_Pressure_Sensor ;
            sh:object brick:Exhaust_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Static_Pressure_Sensor ;
            sh:object brick:Exhaust_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Static_Pressure_Sensor ;
            sh:object brick:Exhaust_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Static_Pressure_Sensor ;
            sh:object brick:Exhaust_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Static_Pressure_Sensor ;
            sh:object brick:Exhaust_Air_Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-exhaust,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Exhaust_Air_Static_Pressure_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Static_Pressure_Setpoint ;
            sh:object brick:Exhaust_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Static_Pressure_Setpoint ;
            sh:object brick:Exhaust_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Static_Pressure_Setpoint ;
            sh:object brick:Exhaust_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Static_Pressure_Setpoint ;
            sh:object brick:Exhaust_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Static_Pressure_Setpoint ;
            sh:object brick:Exhaust_Air_Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-exhaust,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Exhaust_Air_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Temperature_Sensor ;
            sh:object brick:Exhaust_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Temperature_Sensor ;
            sh:object brick:Exhaust_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Temperature_Sensor ;
            sh:object brick:Exhaust_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Temperature_Sensor ;
            sh:object brick:Exhaust_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Exhaust_Air_Temperature_Sensor ;
            sh:object brick:Exhaust_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-exhaust,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Fault_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Fault_Status ;
            sh:object brick:Fault_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Fault_Status ;
            sh:object brick:Fault_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Flow_Sensor ;
            sh:object brick:Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Flow_Sensor ;
            sh:object brick:Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Flow_Sensor ;
            sh:object brick:Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Flow_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Flow_Setpoint ;
            sh:object brick:Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Flow_Setpoint ;
            sh:object brick:Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Flow_Setpoint ;
            sh:object brick:Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Frequency_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Frequency_Sensor ;
            sh:object brick:Frequency_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Frequency_Sensor ;
            sh:object brick:Frequency_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Frequency_Sensor ;
            sh:object brick:Frequency_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-freq,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Heat_Sink_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Heat_Sink_Temperature_Sensor ;
            sh:object brick:Heat_Sink_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heat_Sink_Temperature_Sensor ;
            sh:object brick:Heat_Sink_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heat_Sink_Temperature_Sensor ;
            sh:object brick:Heat_Sink_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Heating_Command a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Heating_Command ;
            sh:object brick:Heating_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Command ;
            sh:object brick:Heating_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Command ;
            sh:object brick:Heating_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cmd,
        ph:HasTag-heat,
        ph:HasTag-point .

xeto:infer_brick_rule_Brick_Heating_Discharge_Air_Flow_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-flow,
        ph:HasTag-heating,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Heating_Discharge_Air_Temperature_Deadband_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:object brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-discharge,
        ph:HasTag-heating,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Heating_Enable_Command a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Heating_Enable_Command ;
            sh:object brick:Heating_Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Enable_Command ;
            sh:object brick:Heating_Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Enable_Command ;
            sh:object brick:Heating_Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Enable_Command ;
            sh:object brick:Heating_Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Heating_Enable_Command ;
            sh:object brick:Heating_Enable_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cmd,
        ph:HasTag-enable,
        ph:HasTag-heating,
        ph:HasTag-point,
        ph:HasTag-run .

xeto:infer_brick_rule_Brick_Hot_Water_Differential_Pressure_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:object brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:object brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:object brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:object brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:object brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:object brick:Hot_Water_Differential_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-delta,
        ph:HasTag-hot,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Hot_Water_Differential_Pressure_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:object brick:Hot_Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-delta,
        ph:HasTag-differential,
        ph:HasTag-hot,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Hot_Water_Differential_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:object brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:object brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:object brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:object brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:object brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:object brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:object brick:Hot_Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-delta,
        ph:HasTag-entering,
        ph:HasTag-hot,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Hot_Water_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Flow_Sensor ;
            sh:object brick:Hot_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Flow_Sensor ;
            sh:object brick:Hot_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Flow_Sensor ;
            sh:object brick:Hot_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Flow_Sensor ;
            sh:object brick:Hot_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Flow_Sensor ;
            sh:object brick:Hot_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-flow,
        ph:HasTag-hot,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Hot_Water_Flow_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Flow_Setpoint ;
            sh:object brick:Hot_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Flow_Setpoint ;
            sh:object brick:Hot_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Flow_Setpoint ;
            sh:object brick:Hot_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Flow_Setpoint ;
            sh:object brick:Hot_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Hot_Water_Flow_Setpoint ;
            sh:object brick:Hot_Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-flow,
        ph:HasTag-hot,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Humidity_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Humidity_Sensor ;
            sh:object brick:Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Humidity_Sensor ;
            sh:object brick:Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Humidity_Sensor ;
            sh:object brick:Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Humidity_Sensor ;
            sh:object brick:Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-humidity,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Humidity_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Humidity_Setpoint ;
            sh:object brick:Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Humidity_Setpoint ;
            sh:object brick:Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Humidity_Setpoint ;
            sh:object brick:Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-humidity,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Illuminance_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Illuminance_Sensor ;
            sh:object brick:Illuminance_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Illuminance_Sensor ;
            sh:object brick:Illuminance_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Illuminance_Sensor ;
            sh:object brick:Illuminance_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-illuminance,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Leak_Alarm a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Leak_Alarm ;
            sh:object brick:Leak_Alarm ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Leak_Alarm ;
            sh:object brick:Leak_Alarm ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-alarm,
        ph:HasTag-point .

xeto:infer_brick_rule_Brick_Leaving_Water_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Leaving_Water_Flow_Sensor ;
            sh:object brick:Leaving_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Leaving_Water_Flow_Sensor ;
            sh:object brick:Leaving_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Leaving_Water_Flow_Sensor ;
            sh:object brick:Leaving_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Leaving_Water_Flow_Sensor ;
            sh:object brick:Leaving_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Leaving_Water_Flow_Sensor ;
            sh:object brick:Leaving_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Leaving_Water_Flow_Sensor ;
            sh:object brick:Leaving_Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-flow,
        ph:HasTag-leaving,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Leaving_Water_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Leaving_Water_Temperature_Sensor ;
            sh:object brick:Leaving_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Leaving_Water_Temperature_Sensor ;
            sh:object brick:Leaving_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Leaving_Water_Temperature_Sensor ;
            sh:object brick:Leaving_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Leaving_Water_Temperature_Sensor ;
            sh:object brick:Leaving_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Leaving_Water_Temperature_Sensor ;
            sh:object brick:Leaving_Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-leaving,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Lockout_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Lockout_Status ;
            sh:object brick:Lockout_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Lockout_Status ;
            sh:object brick:Lockout_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Lockout_Status ;
            sh:object brick:Lockout_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Lockout_Status ;
            sh:object brick:Lockout_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Lockout_Status ;
            sh:object brick:Lockout_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Lockout_Status ;
            sh:object brick:Lockout_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Lockout_Status ;
            sh:object brick:Lockout_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-disable,
        ph:HasTag-economizing,
        ph:HasTag-outside,
        ph:HasTag-point,
        ph:HasTag-status,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Mixed_Air_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Flow_Sensor ;
            sh:object brick:Mixed_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Flow_Sensor ;
            sh:object brick:Mixed_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Flow_Sensor ;
            sh:object brick:Mixed_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Flow_Sensor ;
            sh:object brick:Mixed_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Flow_Sensor ;
            sh:object brick:Mixed_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-flow,
        ph:HasTag-mixed,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Mixed_Air_Humidity_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Humidity_Sensor ;
            sh:object brick:Mixed_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Humidity_Sensor ;
            sh:object brick:Mixed_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Humidity_Sensor ;
            sh:object brick:Mixed_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Humidity_Sensor ;
            sh:object brick:Mixed_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Humidity_Sensor ;
            sh:object brick:Mixed_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-humidity,
        ph:HasTag-mixed,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Mixed_Air_Humidity_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Humidity_Setpoint ;
            sh:object brick:Mixed_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Humidity_Setpoint ;
            sh:object brick:Mixed_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Humidity_Setpoint ;
            sh:object brick:Mixed_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Humidity_Setpoint ;
            sh:object brick:Mixed_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Humidity_Setpoint ;
            sh:object brick:Mixed_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-humidity,
        ph:HasTag-mixed,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Mixed_Air_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Temperature_Sensor ;
            sh:object brick:Mixed_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Temperature_Sensor ;
            sh:object brick:Mixed_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Temperature_Sensor ;
            sh:object brick:Mixed_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Temperature_Sensor ;
            sh:object brick:Mixed_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Temperature_Sensor ;
            sh:object brick:Mixed_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-mixed,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Mixed_Air_Temperature_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Temperature_Setpoint ;
            sh:object brick:Mixed_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Temperature_Setpoint ;
            sh:object brick:Mixed_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Temperature_Setpoint ;
            sh:object brick:Mixed_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Temperature_Setpoint ;
            sh:object brick:Mixed_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mixed_Air_Temperature_Setpoint ;
            sh:object brick:Mixed_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-mixed,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Mode_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Mode_Status ;
            sh:object brick:Mode_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mode_Status ;
            sh:object brick:Mode_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Mode_Status ;
            sh:object brick:Mode_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-run,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Occupancy_Command a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Occupancy_Command ;
            sh:object brick:Occupancy_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Occupancy_Command ;
            sh:object brick:Occupancy_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Occupancy_Command ;
            sh:object brick:Occupancy_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cmd,
        ph:HasTag-occupied,
        ph:HasTag-point .

xeto:infer_brick_rule_Brick_Occupancy_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Occupancy_Status ;
            sh:object brick:Occupancy_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Occupancy_Status ;
            sh:object brick:Occupancy_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Occupancy_Status ;
            sh:object brick:Occupancy_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-occupied,
        ph:HasTag-point,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Occupied_Mode_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Occupied_Mode_Status ;
            sh:object brick:Occupied_Mode_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Occupied_Mode_Status ;
            sh:object brick:Occupied_Mode_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Occupied_Mode_Status ;
            sh:object brick:Occupied_Mode_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Occupied_Mode_Status ;
            sh:object brick:Occupied_Mode_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-occupied,
        ph:HasTag-point,
        ph:HasTag-run,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Off_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Off_Status ;
            sh:object brick:Off_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Off_Status ;
            sh:object brick:Off_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Off_Status ;
            sh:object brick:Off_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-off,
        ph:HasTag-point,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_On_Off_Command a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:On_Off_Command ;
            sh:object brick:On_Off_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:On_Off_Command ;
            sh:object brick:On_Off_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:On_Off_Command ;
            sh:object brick:On_Off_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cmd,
        ph:HasTag-point,
        ph:HasTag-run .

xeto:infer_brick_rule_Brick_On_Off_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:On_Off_Status ;
            sh:object brick:On_Off_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:On_Off_Status ;
            sh:object brick:On_Off_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:On_Off_Status ;
            sh:object brick:On_Off_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:On_Off_Status ;
            sh:object brick:On_Off_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-off,
        ph:HasTag-point,
        ph:HasTag-run,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_On_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:On_Status ;
            sh:object brick:On_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:On_Status ;
            sh:object brick:On_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:On_Status ;
            sh:object brick:On_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-on,
        ph:HasTag-point,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Operating_Mode_Command a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Operating_Mode_Command ;
            sh:object brick:Operating_Mode_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Operating_Mode_Command ;
            sh:object brick:Operating_Mode_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Operating_Mode_Command ;
            sh:object brick:Operating_Mode_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cmd,
        ph:HasTag-enable,
        ph:HasTag-point .

xeto:infer_brick_rule_Brick_Operating_Mode_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Operating_Mode_Status ;
            sh:object brick:Operating_Mode_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Operating_Mode_Status ;
            sh:object brick:Operating_Mode_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Operating_Mode_Status ;
            sh:object brick:Operating_Mode_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-run,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Outside_Air_CO2_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_CO2_Sensor ;
            sh:object brick:Outside_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_CO2_Sensor ;
            sh:object brick:Outside_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_CO2_Sensor ;
            sh:object brick:Outside_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_CO2_Sensor ;
            sh:object brick:Outside_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_CO2_Sensor ;
            sh:object brick:Outside_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_CO2_Sensor ;
            sh:object brick:Outside_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-co2,
        ph:HasTag-outside,
        ph:HasTag-point,
        ph:HasTag-quality,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Outside_Air_Dewpoint_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Dewpoint_Sensor ;
            sh:object brick:Outside_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Dewpoint_Sensor ;
            sh:object brick:Outside_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Dewpoint_Sensor ;
            sh:object brick:Outside_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Dewpoint_Sensor ;
            sh:object brick:Outside_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Dewpoint_Sensor ;
            sh:object brick:Outside_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Dewpoint_Sensor ;
            sh:object brick:Outside_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Dewpoint_Sensor ;
            sh:object brick:Outside_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-dewPoint,
        ph:HasTag-dewpoint,
        ph:HasTag-outside,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Outside_Air_Enthalpy_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Enthalpy_Sensor ;
            sh:object brick:Outside_Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Enthalpy_Sensor ;
            sh:object brick:Outside_Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Enthalpy_Sensor ;
            sh:object brick:Outside_Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Enthalpy_Sensor ;
            sh:object brick:Outside_Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Enthalpy_Sensor ;
            sh:object brick:Outside_Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-enthalpy,
        ph:HasTag-outside,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Outside_Air_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Flow_Sensor ;
            sh:object brick:Outside_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Flow_Sensor ;
            sh:object brick:Outside_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Flow_Sensor ;
            sh:object brick:Outside_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Flow_Sensor ;
            sh:object brick:Outside_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Flow_Sensor ;
            sh:object brick:Outside_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-flow,
        ph:HasTag-outside,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Outside_Air_Flow_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Flow_Setpoint ;
            sh:object brick:Outside_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Flow_Setpoint ;
            sh:object brick:Outside_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Flow_Setpoint ;
            sh:object brick:Outside_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Flow_Setpoint ;
            sh:object brick:Outside_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Flow_Setpoint ;
            sh:object brick:Outside_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Flow_Setpoint ;
            sh:object brick:Outside_Air_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-flow,
        ph:HasTag-min,
        ph:HasTag-outside,
        ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Outside_Air_Humidity_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Humidity_Sensor ;
            sh:object brick:Outside_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Humidity_Sensor ;
            sh:object brick:Outside_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Humidity_Sensor ;
            sh:object brick:Outside_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Humidity_Sensor ;
            sh:object brick:Outside_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Humidity_Sensor ;
            sh:object brick:Outside_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-humidity,
        ph:HasTag-outside,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Outside_Air_Lockout_Temperature_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:object brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:object brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:object brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:object brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:object brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:object brick:Outside_Air_Lockout_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-disable,
        ph:HasTag-outside,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Outside_Air_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Temperature_Sensor ;
            sh:object brick:Outside_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Temperature_Sensor ;
            sh:object brick:Outside_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Temperature_Sensor ;
            sh:object brick:Outside_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Temperature_Sensor ;
            sh:object brick:Outside_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Temperature_Sensor ;
            sh:object brick:Outside_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-outside,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Outside_Air_Temperature_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Temperature_Setpoint ;
            sh:object brick:Outside_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Temperature_Setpoint ;
            sh:object brick:Outside_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Temperature_Setpoint ;
            sh:object brick:Outside_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Temperature_Setpoint ;
            sh:object brick:Outside_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Outside_Air_Temperature_Setpoint ;
            sh:object brick:Outside_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-outside,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Overridden_Off_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Overridden_Off_Status ;
            sh:object brick:Overridden_Off_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Overridden_Off_Status ;
            sh:object brick:Overridden_Off_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Overridden_Off_Status ;
            sh:object brick:Overridden_Off_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-off,
        ph:HasTag-point,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Overridden_On_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Overridden_On_Status ;
            sh:object brick:Overridden_On_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Overridden_On_Status ;
            sh:object brick:Overridden_On_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Overridden_On_Status ;
            sh:object brick:Overridden_On_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-on,
        ph:HasTag-point,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Overridden_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Overridden_Status ;
            sh:object brick:Overridden_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Overridden_Status ;
            sh:object brick:Overridden_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Override_Command a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Override_Command ;
            sh:object brick:Override_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Override_Command ;
            sh:object brick:Override_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cmd,
        ph:HasTag-point .

xeto:infer_brick_rule_Brick_PM10_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:PM10_Sensor ;
            sh:object brick:PM10_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM10_Sensor ;
            sh:object brick:PM10_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM10_Sensor ;
            sh:object brick:PM10_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM10_Sensor ;
            sh:object brick:PM10_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM10_Sensor ;
            sh:object brick:PM10_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM10_Sensor ;
            sh:object brick:PM10_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM10_Sensor ;
            sh:object brick:PM10_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-matter,
        ph:HasTag-particulate,
        ph:HasTag-point,
        ph:HasTag-quality,
        ph:HasTag-sensor,
        ph:HasTag-zone .

xeto:infer_brick_rule_Brick_PM1_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:PM1_Sensor ;
            sh:object brick:PM1_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM1_Sensor ;
            sh:object brick:PM1_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM1_Sensor ;
            sh:object brick:PM1_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM1_Sensor ;
            sh:object brick:PM1_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM1_Sensor ;
            sh:object brick:PM1_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM1_Sensor ;
            sh:object brick:PM1_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM1_Sensor ;
            sh:object brick:PM1_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-matter,
        ph:HasTag-particulate,
        ph:HasTag-point,
        ph:HasTag-quality,
        ph:HasTag-sensor,
        ph:HasTag-zone .

xeto:infer_brick_rule_Brick_PM25_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:PM2.5_Sensor ;
            sh:object brick:PM2.5_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM2.5_Sensor ;
            sh:object brick:PM2.5_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM2.5_Sensor ;
            sh:object brick:PM2.5_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM2.5_Sensor ;
            sh:object brick:PM2.5_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM2.5_Sensor ;
            sh:object brick:PM2.5_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM2.5_Sensor ;
            sh:object brick:PM2.5_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:PM2.5_Sensor ;
            sh:object brick:PM2.5_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-matter,
        ph:HasTag-particulate,
        ph:HasTag-point,
        ph:HasTag-quality,
        ph:HasTag-sensor,
        ph:HasTag-zone .

xeto:infer_brick_rule_Brick_Particulate_Matter_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Particulate_Matter_Sensor ;
            sh:object brick:Particulate_Matter_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Particulate_Matter_Sensor ;
            sh:object brick:Particulate_Matter_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Particulate_Matter_Sensor ;
            sh:object brick:Particulate_Matter_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Particulate_Matter_Sensor ;
            sh:object brick:Particulate_Matter_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Particulate_Matter_Sensor ;
            sh:object brick:Particulate_Matter_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Particulate_Matter_Sensor ;
            sh:object brick:Particulate_Matter_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-matter,
        ph:HasTag-particulate,
        ph:HasTag-point,
        ph:HasTag-quality,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Position_Command a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Position_Command ;
            sh:object brick:Position_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Position_Command ;
            sh:object brick:Position_Command ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-cmd,
        ph:HasTag-point .

xeto:infer_brick_rule_Brick_Position_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Position_Sensor ;
            sh:object brick:Position_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Position_Sensor ;
            sh:object brick:Position_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Power_Factor_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Power_Factor_Sensor ;
            sh:object brick:Power_Factor_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Power_Factor_Sensor ;
            sh:object brick:Power_Factor_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Power_Factor_Sensor ;
            sh:object brick:Power_Factor_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-pf,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Power_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Power_Sensor ;
            sh:object brick:Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Power_Sensor ;
            sh:object brick:Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Power_Sensor ;
            sh:object brick:Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-power,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Pressure_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Pressure_Sensor ;
            sh:object brick:Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Pressure_Sensor ;
            sh:object brick:Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Pressure_Sensor ;
            sh:object brick:Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Pressure_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Pressure_Setpoint ;
            sh:object brick:Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Pressure_Setpoint ;
            sh:object brick:Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Pressure_Setpoint ;
            sh:object brick:Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Reactive_Power_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Reactive_Power_Sensor ;
            sh:object brick:Reactive_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Reactive_Power_Sensor ;
            sh:object brick:Reactive_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Reactive_Power_Sensor ;
            sh:object brick:Reactive_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Reactive_Power_Sensor ;
            sh:object brick:Reactive_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Reactive_Power_Sensor ;
            sh:object brick:Reactive_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-electric,
        ph:HasTag-point,
        ph:HasTag-power,
        ph:HasTag-reactive,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Relative_Humidity_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Relative_Humidity_Sensor ;
            sh:object brick:Relative_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Relative_Humidity_Sensor ;
            sh:object brick:Relative_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Relative_Humidity_Sensor ;
            sh:object brick:Relative_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Relative_Humidity_Sensor ;
            sh:object brick:Relative_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-humidity,
        ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Return_Air_CO2_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Return_Air_CO2_Sensor ;
            sh:object brick:Return_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_CO2_Sensor ;
            sh:object brick:Return_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_CO2_Sensor ;
            sh:object brick:Return_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_CO2_Sensor ;
            sh:object brick:Return_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_CO2_Sensor ;
            sh:object brick:Return_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_CO2_Sensor ;
            sh:object brick:Return_Air_CO2_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-co2,
        ph:HasTag-point,
        ph:HasTag-quality,
        ph:HasTag-return,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Return_Air_CO2_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Return_Air_CO2_Setpoint ;
            sh:object brick:Return_Air_CO2_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_CO2_Setpoint ;
            sh:object brick:Return_Air_CO2_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_CO2_Setpoint ;
            sh:object brick:Return_Air_CO2_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_CO2_Setpoint ;
            sh:object brick:Return_Air_CO2_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_CO2_Setpoint ;
            sh:object brick:Return_Air_CO2_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-co2,
        ph:HasTag-point,
        ph:HasTag-return,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Return_Air_Dewpoint_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Dewpoint_Sensor ;
            sh:object brick:Return_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Dewpoint_Sensor ;
            sh:object brick:Return_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Dewpoint_Sensor ;
            sh:object brick:Return_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Dewpoint_Sensor ;
            sh:object brick:Return_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Dewpoint_Sensor ;
            sh:object brick:Return_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Dewpoint_Sensor ;
            sh:object brick:Return_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Dewpoint_Sensor ;
            sh:object brick:Return_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-dewPoint,
        ph:HasTag-dewpoint,
        ph:HasTag-point,
        ph:HasTag-return,
        ph:HasTag-sensor,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Return_Air_Enthalpy_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Enthalpy_Sensor ;
            sh:object brick:Return_Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Enthalpy_Sensor ;
            sh:object brick:Return_Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Enthalpy_Sensor ;
            sh:object brick:Return_Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Enthalpy_Sensor ;
            sh:object brick:Return_Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Enthalpy_Sensor ;
            sh:object brick:Return_Air_Enthalpy_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-enthalpy,
        ph:HasTag-point,
        ph:HasTag-return,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Return_Air_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Flow_Sensor ;
            sh:object brick:Return_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Flow_Sensor ;
            sh:object brick:Return_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Flow_Sensor ;
            sh:object brick:Return_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Flow_Sensor ;
            sh:object brick:Return_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Flow_Sensor ;
            sh:object brick:Return_Air_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-return,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Return_Air_Humidity_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Humidity_Sensor ;
            sh:object brick:Return_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Humidity_Sensor ;
            sh:object brick:Return_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Humidity_Sensor ;
            sh:object brick:Return_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Humidity_Sensor ;
            sh:object brick:Return_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Humidity_Sensor ;
            sh:object brick:Return_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-humidity,
        ph:HasTag-point,
        ph:HasTag-return,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Return_Air_Humidity_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Humidity_Setpoint ;
            sh:object brick:Return_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Humidity_Setpoint ;
            sh:object brick:Return_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Humidity_Setpoint ;
            sh:object brick:Return_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Humidity_Setpoint ;
            sh:object brick:Return_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Humidity_Setpoint ;
            sh:object brick:Return_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-humidity,
        ph:HasTag-point,
        ph:HasTag-return,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Return_Air_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Temperature_Sensor ;
            sh:object brick:Return_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Temperature_Sensor ;
            sh:object brick:Return_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Temperature_Sensor ;
            sh:object brick:Return_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Temperature_Sensor ;
            sh:object brick:Return_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Temperature_Sensor ;
            sh:object brick:Return_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-point,
        ph:HasTag-return,
        ph:HasTag-sensor,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Return_Air_Temperature_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Temperature_Setpoint ;
            sh:object brick:Return_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Temperature_Setpoint ;
            sh:object brick:Return_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Temperature_Setpoint ;
            sh:object brick:Return_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Temperature_Setpoint ;
            sh:object brick:Return_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Return_Air_Temperature_Setpoint ;
            sh:object brick:Return_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-point,
        ph:HasTag-return,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Run_Request_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Run_Request_Status ;
            sh:object brick:Run_Request_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Request_Status ;
            sh:object brick:Run_Request_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Request_Status ;
            sh:object brick:Run_Request_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Request_Status ;
            sh:object brick:Run_Request_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Request_Status ;
            sh:object brick:Run_Request_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Request_Status ;
            sh:object brick:Run_Request_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-off,
        ph:HasTag-point,
        ph:HasTag-run,
        ph:HasTag-start,
        ph:HasTag-status,
        ph:HasTag-stop .

xeto:infer_brick_rule_Brick_Run_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Run_Status ;
            sh:object brick:Run_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Status ;
            sh:object brick:Run_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Status ;
            sh:object brick:Run_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Status ;
            sh:object brick:Run_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Status ;
            sh:object brick:Run_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Status ;
            sh:object brick:Run_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-off,
        ph:HasTag-point,
        ph:HasTag-run,
        ph:HasTag-start,
        ph:HasTag-status,
        ph:HasTag-stop .

xeto:infer_brick_rule_Brick_Run_Time_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Run_Time_Sensor ;
            sh:object brick:Run_Time_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Time_Sensor ;
            sh:object brick:Run_Time_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Time_Sensor ;
            sh:object brick:Run_Time_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Run_Time_Sensor ;
            sh:object brick:Run_Time_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-duration,
        ph:HasTag-point,
        ph:HasTag-run,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Sensor ;
            sh:object brick:Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Sensor ;
            sh:object brick:Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Setpoint ;
            sh:object brick:Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Setpoint ;
            sh:object brick:Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Speed_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Speed_Sensor ;
            sh:object brick:Speed_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Speed_Sensor ;
            sh:object brick:Speed_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Speed_Sensor ;
            sh:object brick:Speed_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-speed .

xeto:infer_brick_rule_Brick_Speed_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Speed_Setpoint ;
            sh:object brick:Speed_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Speed_Setpoint ;
            sh:object brick:Speed_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Speed_Setpoint ;
            sh:object brick:Speed_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-speed .

xeto:infer_brick_rule_Brick_Start_Stop_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Start_Stop_Status ;
            sh:object brick:Start_Stop_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Start_Stop_Status ;
            sh:object brick:Start_Stop_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Start_Stop_Status ;
            sh:object brick:Start_Stop_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Start_Stop_Status ;
            sh:object brick:Start_Stop_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Start_Stop_Status ;
            sh:object brick:Start_Stop_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Start_Stop_Status ;
            sh:object brick:Start_Stop_Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-off,
        ph:HasTag-point,
        ph:HasTag-run,
        ph:HasTag-start,
        ph:HasTag-status,
        ph:HasTag-stop .

xeto:infer_brick_rule_Brick_Static_Pressure_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Static_Pressure_Sensor ;
            sh:object brick:Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Static_Pressure_Sensor ;
            sh:object brick:Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Static_Pressure_Sensor ;
            sh:object brick:Static_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Static_Pressure_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Static_Pressure_Setpoint ;
            sh:object brick:Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Static_Pressure_Setpoint ;
            sh:object brick:Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Static_Pressure_Setpoint ;
            sh:object brick:Static_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sp .

xeto:infer_brick_rule_Brick_Status a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Status ;
            sh:object brick:Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Status ;
            sh:object brick:Status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-status .

xeto:infer_brick_rule_Brick_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Temperature_Sensor ;
            sh:object brick:Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Temperature_Sensor ;
            sh:object brick:Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Temperature_Sensor ;
            sh:object brick:Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Temperature_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Temperature_Setpoint ;
            sh:object brick:Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Temperature_Setpoint ;
            sh:object brick:Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Temperature_Setpoint ;
            sh:object brick:Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp .

xeto:infer_brick_rule_Brick_Thermal_Power_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Thermal_Power_Sensor ;
            sh:object brick:Thermal_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Thermal_Power_Sensor ;
            sh:object brick:Thermal_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Thermal_Power_Sensor ;
            sh:object brick:Thermal_Power_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-power,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Torque_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Torque_Sensor ;
            sh:object brick:Torque_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Torque_Sensor ;
            sh:object brick:Torque_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sensor .

xeto:infer_brick_rule_Brick_Velocity_Pressure_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Velocity_Pressure_Sensor ;
            sh:object brick:Velocity_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Velocity_Pressure_Sensor ;
            sh:object brick:Velocity_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Velocity_Pressure_Sensor ;
            sh:object brick:Velocity_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Velocity_Pressure_Sensor ;
            sh:object brick:Velocity_Pressure_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sensor,
        ph:HasTag-velocity .

xeto:infer_brick_rule_Brick_Voltage_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Voltage_Sensor ;
            sh:object brick:Voltage_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Voltage_Sensor ;
            sh:object brick:Voltage_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Voltage_Sensor ;
            sh:object brick:Voltage_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-volt .

xeto:infer_brick_rule_Brick_Water_Differential_Pressure_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Water_Differential_Pressure_Setpoint ;
            sh:object brick:Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Differential_Pressure_Setpoint ;
            sh:object brick:Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Differential_Pressure_Setpoint ;
            sh:object brick:Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Differential_Pressure_Setpoint ;
            sh:object brick:Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Differential_Pressure_Setpoint ;
            sh:object brick:Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Differential_Pressure_Setpoint ;
            sh:object brick:Water_Differential_Pressure_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-delta,
        ph:HasTag-differential,
        ph:HasTag-point,
        ph:HasTag-pressure,
        ph:HasTag-sp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Water_Differential_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Water_Differential_Temperature_Sensor ;
            sh:object brick:Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Differential_Temperature_Sensor ;
            sh:object brick:Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Differential_Temperature_Sensor ;
            sh:object brick:Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Differential_Temperature_Sensor ;
            sh:object brick:Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Differential_Temperature_Sensor ;
            sh:object brick:Water_Differential_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-delta,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Water_Flow_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Water_Flow_Sensor ;
            sh:object brick:Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Flow_Sensor ;
            sh:object brick:Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Flow_Sensor ;
            sh:object brick:Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Flow_Sensor ;
            sh:object brick:Water_Flow_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Water_Flow_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Water_Flow_Setpoint ;
            sh:object brick:Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Flow_Setpoint ;
            sh:object brick:Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Flow_Setpoint ;
            sh:object brick:Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Flow_Setpoint ;
            sh:object brick:Water_Flow_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-flow,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Water_Level_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Water_Level_Sensor ;
            sh:object brick:Water_Level_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Level_Sensor ;
            sh:object brick:Water_Level_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Level_Sensor ;
            sh:object brick:Water_Level_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Water_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Water_Temperature_Sensor ;
            sh:object brick:Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Temperature_Sensor ;
            sh:object brick:Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Temperature_Sensor ;
            sh:object brick:Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Water_Temperature_Sensor ;
            sh:object brick:Water_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp,
        ph:HasTag-water .

xeto:infer_brick_rule_Brick_Zone_Air_Dewpoint_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Dewpoint_Sensor ;
            sh:object brick:Zone_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Dewpoint_Sensor ;
            sh:object brick:Zone_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Dewpoint_Sensor ;
            sh:object brick:Zone_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Dewpoint_Sensor ;
            sh:object brick:Zone_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Dewpoint_Sensor ;
            sh:object brick:Zone_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Dewpoint_Sensor ;
            sh:object brick:Zone_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Dewpoint_Sensor ;
            sh:object brick:Zone_Air_Dewpoint_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-dewPoint,
        ph:HasTag-dewpoint,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp,
        ph:HasTag-zone .

xeto:infer_brick_rule_Brick_Zone_Air_Humidity_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Humidity_Sensor ;
            sh:object brick:Zone_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Humidity_Sensor ;
            sh:object brick:Zone_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Humidity_Sensor ;
            sh:object brick:Zone_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Humidity_Sensor ;
            sh:object brick:Zone_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Humidity_Sensor ;
            sh:object brick:Zone_Air_Humidity_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-humidity,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-zone .

xeto:infer_brick_rule_Brick_Zone_Air_Humidity_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Humidity_Setpoint ;
            sh:object brick:Zone_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Humidity_Setpoint ;
            sh:object brick:Zone_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Humidity_Setpoint ;
            sh:object brick:Zone_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Humidity_Setpoint ;
            sh:object brick:Zone_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Humidity_Setpoint ;
            sh:object brick:Zone_Air_Humidity_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-humidity,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-zone .

xeto:infer_brick_rule_Brick_Zone_Air_Temperature_Sensor a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Temperature_Sensor ;
            sh:object brick:Zone_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Temperature_Sensor ;
            sh:object brick:Zone_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Temperature_Sensor ;
            sh:object brick:Zone_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Temperature_Sensor ;
            sh:object brick:Zone_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Temperature_Sensor ;
            sh:object brick:Zone_Air_Temperature_Sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-point,
        ph:HasTag-sensor,
        ph:HasTag-temp,
        ph:HasTag-zone .

xeto:infer_brick_rule_Brick_Zone_Air_Temperature_Setpoint a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Temperature_Setpoint ;
            sh:object brick:Zone_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Temperature_Setpoint ;
            sh:object brick:Zone_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Temperature_Setpoint ;
            sh:object brick:Zone_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Temperature_Setpoint ;
            sh:object brick:Zone_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:condition brick:Zone_Air_Temperature_Setpoint ;
            sh:object brick:Zone_Air_Temperature_Setpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:HasTag-air,
        ph:HasTag-point,
        ph:HasTag-sp,
        ph:HasTag-temp,
        ph:HasTag-zone .

ph:HasTag-active-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-active ;
            sh:object ph:HasTag-active ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-air-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-air ;
            sh:object ph:HasTag-air ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-alarm-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-alarm ;
            sh:object ph:HasTag-alarm ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-avg-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-avg ;
            sh:object ph:HasTag-avg ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-bypass-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-bypass ;
            sh:object ph:HasTag-bypass ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-chilled-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-chilled ;
            sh:object ph:HasTag-chilled ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-cmd-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-cmd ;
            sh:object ph:HasTag-cmd ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-co2-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-co2 ;
            sh:object ph:HasTag-co2 ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-condensate-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-condensate ;
            sh:object ph:HasTag-condensate ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-condenser-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-condenser ;
            sh:object ph:HasTag-condenser ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-cool-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-cool ;
            sh:object ph:HasTag-cool ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-cooling-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-cooling ;
            sh:object ph:HasTag-cooling ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-current-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-current ;
            sh:object ph:HasTag-current ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-dc-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-dc ;
            sh:object ph:HasTag-dc ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-delta-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-delta ;
            sh:object ph:HasTag-delta ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-dewPoint-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-dewPoint ;
            sh:object ph:HasTag-dewPoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-dewpoint-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-dewpoint ;
            sh:object ph:HasTag-dewpoint ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-differential-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-differential ;
            sh:object ph:HasTag-differential ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-disable-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-disable ;
            sh:object ph:HasTag-disable ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-discharge-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-discharge ;
            sh:object ph:HasTag-discharge ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-duration-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-duration ;
            sh:object ph:HasTag-duration ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-economizing-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-economizing ;
            sh:object ph:HasTag-economizing ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-effective-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-effective ;
            sh:object ph:HasTag-effective ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-elec-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-elec ;
            sh:object ph:HasTag-elec ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-electric-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-electric ;
            sh:object ph:HasTag-electric ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-enable-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-enable ;
            sh:object ph:HasTag-enable ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-entering-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-entering ;
            sh:object ph:HasTag-entering ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-enthalpy-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-enthalpy ;
            sh:object ph:HasTag-enthalpy ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-exhaust-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-exhaust ;
            sh:object ph:HasTag-exhaust ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-flow-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-flow ;
            sh:object ph:HasTag-flow ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-freq-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-freq ;
            sh:object ph:HasTag-freq ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-heat-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-heat ;
            sh:object ph:HasTag-heat ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-heating-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-heating ;
            sh:object ph:HasTag-heating ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-hot-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-hot ;
            sh:object ph:HasTag-hot ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-humidity-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-humidity ;
            sh:object ph:HasTag-humidity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-illuminance-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-illuminance ;
            sh:object ph:HasTag-illuminance ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-leaving-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-leaving ;
            sh:object ph:HasTag-leaving ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-matter-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-matter ;
            sh:object ph:HasTag-matter ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-min-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-min ;
            sh:object ph:HasTag-min ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-mixed-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-mixed ;
            sh:object ph:HasTag-mixed ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-occupied-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-occupied ;
            sh:object ph:HasTag-occupied ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-off-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-off ;
            sh:object ph:HasTag-off ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-on-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-on ;
            sh:object ph:HasTag-on ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-outside-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-outside ;
            sh:object ph:HasTag-outside ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-particulate-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-particulate ;
            sh:object ph:HasTag-particulate ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-pf-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-pf ;
            sh:object ph:HasTag-pf ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-point-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-point ;
            sh:object ph:HasTag-point ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-power-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-power ;
            sh:object ph:HasTag-power ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-pressure-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-pressure ;
            sh:object ph:HasTag-pressure ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-quality-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-quality ;
            sh:object ph:HasTag-quality ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-reactive-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-reactive ;
            sh:object ph:HasTag-reactive ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-return-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-return ;
            sh:object ph:HasTag-return ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-run-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-run ;
            sh:object ph:HasTag-run ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-sensor-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-sensor ;
            sh:object ph:HasTag-sensor ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-sp-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-sp ;
            sh:object ph:HasTag-sp ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-speed-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-speed ;
            sh:object ph:HasTag-speed ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-start-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-start ;
            sh:object ph:HasTag-start ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-status-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-status ;
            sh:object ph:HasTag-status ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-stop-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-stop ;
            sh:object ph:HasTag-stop ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-temp-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-temp ;
            sh:object ph:HasTag-temp ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-velocity-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-velocity ;
            sh:object ph:HasTag-velocity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-volt-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-volt ;
            sh:object ph:HasTag-volt ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-water-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-water ;
            sh:object ph:HasTag-water ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-zone-Rule a sh:NodeShape ;
    sh:rule [ a sh:TripleRule ;
            sh:condition ph:HasTag-zone ;
            sh:object ph:HasTag-zone ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] ;
    sh:targetClass ph:Entity .

ph:HasTag-active a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "active" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-avg a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "avg" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-bypass a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "bypass" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-condensate a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "condensate" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-current a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "current" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-dc a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "dc" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-economizing a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "economizing" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-elec a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "elec" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-freq a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "freq" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-heat a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "heat" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-illuminance a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "illuminance" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-min a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "min" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-pf a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "pf" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-reactive a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "reactive" ;
            sh:path ph:hasMarkerTag ] .

brick:Alarm a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "alarm" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "alarm" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Command a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cmd" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cmd" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Communication_Loss_Alarm a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "alarm" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "alarm" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Fault_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Leak_Alarm a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "alarm" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "alarm" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Overridden_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Override_Command a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cmd" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cmd" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Position_Command a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cmd" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cmd" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Position_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Torque_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

ph:HasTag-condenser a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "condenser" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-disable a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "disable" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-duration a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "duration" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-effective a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "effective" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-leaving a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "leaving" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-on a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "on" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-speed a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "speed" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-velocity a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "velocity" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-volt a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "volt" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-cooling a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "cooling" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-electric a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "electric" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-heating a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "heating" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-occupied a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "occupied" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-start a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "start" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-stop a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "stop" ;
            sh:path ph:hasMarkerTag ] .

brick:CO2_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "co2" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "co2" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Cooling_Command a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cmd" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cool" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cmd" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cool" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Current_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "current" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "current" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "dewpoint" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "dewpoint" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Differential_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "differential" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "differential" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Duration_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "duration" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "duration" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Enable_Command a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "enable" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cmd" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "cmd" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "enable" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Enable_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "enable" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "enable" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "enthalpy" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "enthalpy" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Frequency_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "freq" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "freq" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Heat_Sink_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Heating_Command a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "heat" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cmd" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "heat" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cmd" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Illuminance_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "illuminance" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "illuminance" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Mode_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "run" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "run" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Occupancy_Command a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "occupied" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cmd" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "occupied" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cmd" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Occupancy_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "occupied" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "occupied" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Off_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "off" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "off" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:On_Off_Command a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "run" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cmd" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cmd" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "run" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:On_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "on" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "on" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Operating_Mode_Command a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "enable" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cmd" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "cmd" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "enable" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Operating_Mode_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "run" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "run" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Overridden_Off_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "off" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "off" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Overridden_On_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "on" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "on" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Power_Factor_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pf" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "pf" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Power_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "power" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "power" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Speed_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "speed" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "speed" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Speed_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "speed" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "speed" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Thermal_Power_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "power" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "power" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Voltage_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "volt" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "volt" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Water_Level_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

ph:HasTag-alarm a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "alarm" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-cool a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "cool" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-dewPoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "dewPoint" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-entering a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "entering" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-enthalpy a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "enthalpy" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-matter a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "matter" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-particulate a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "particulate" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-co2 a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "co2" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-dewpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "dewpoint" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-differential a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "differential" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-enable a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "enable" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-mixed a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "mixed" ;
            sh:path ph:hasMarkerTag ] .

brick:Air_Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "enthalpy" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "enthalpy" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Air_Quality_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "quality" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "quality" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Building_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Building_Air_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Condensate_Leak_Alarm a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "alarm" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "condensate" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "condensate" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "alarm" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Cooling_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cool" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cool" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:DC_Bus_Voltage_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "dc" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "volt" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "dc" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "volt" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "delta" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "delta" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Electric_Power_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "power" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "electric" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "electric" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "power" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Electrical_Power_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "elec" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "power" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "elec" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "power" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Occupied_Mode_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "occupied" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "run" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "run" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "occupied" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:On_Off_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "run" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "off" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "off" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "run" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Relative_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Run_Time_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "run" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "duration" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "duration" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "run" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Velocity_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "velocity" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "velocity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

ph:HasTag-chilled a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "chilled" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-exhaust a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "exhaust" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-hot a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "hot" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-off a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "off" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-power a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "power" ;
            sh:path ph:hasMarkerTag ] .

brick:Active_Power_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "electric" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "active" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "power" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "power" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "active" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "electric" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Bypass_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "bypass" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "bypass" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:CO2_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "co2" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "quality" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "co2" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "quality" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Chilled_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "chilled" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "chilled" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Chilled_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "chilled" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "chilled" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Chilled_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "chilled" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "chilled" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Condenser_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "condenser" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "condenser" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Condenser_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "condenser" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "condenser" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Cooling_Enable_Command a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cooling" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "run" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "enable" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cmd" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "run" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cmd" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "enable" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cooling" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "delta" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "differential" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "delta" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "differential" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Discharge_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Discharge_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Discharge_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Discharge_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Discharge_Air_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Discharge_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Discharge_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Discharge_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Effective_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "effective" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "effective" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Entering_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "entering" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "entering" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Exhaust_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "exhaust" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "exhaust" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Exhaust_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "exhaust" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "exhaust" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Exhaust_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "exhaust" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "exhaust" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Exhaust_Air_Static_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "exhaust" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "exhaust" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Exhaust_Air_Static_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "exhaust" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "exhaust" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Exhaust_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "exhaust" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "exhaust" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Heating_Enable_Command a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cmd" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "run" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "heating" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "enable" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "heating" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cmd" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "enable" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "run" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Hot_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "hot" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "hot" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Hot_Water_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "hot" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "hot" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Leaving_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "leaving" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "leaving" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Mixed_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "mixed" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "mixed" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Mixed_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "mixed" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "mixed" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Mixed_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "mixed" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "mixed" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Mixed_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "mixed" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "mixed" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Mixed_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "mixed" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "mixed" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Outside_Air_Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "enthalpy" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "outside" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "outside" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "enthalpy" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Outside_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "outside" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "outside" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Outside_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "outside" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "outside" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Outside_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "outside" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "outside" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Outside_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "outside" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "outside" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Reactive_Power_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "power" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "electric" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "reactive" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "electric" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "reactive" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "power" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Return_Air_CO2_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "return" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "co2" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "return" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "co2" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Return_Air_Enthalpy_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "return" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "enthalpy" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "enthalpy" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "return" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Return_Air_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "return" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "return" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Return_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "return" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "return" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Return_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "return" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "return" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Return_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "return" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "return" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Return_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "return" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "return" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Water_Differential_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "delta" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "delta" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Zone_Air_Humidity_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "zone" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "zone" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Zone_Air_Humidity_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "zone" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "humidity" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "zone" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "humidity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Zone_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "zone" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "zone" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Zone_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "zone" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "zone" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

ph:HasTag-quality a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "quality" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-return a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "return" ;
            sh:path ph:hasMarkerTag ] .

brick:Average_Zone_Air_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "zone" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "avg" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "avg" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "zone" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Chilled_Water_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "delta" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "chilled" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "chilled" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "delta" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Chilled_Water_Differential_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "delta" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "chilled" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "chilled" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "delta" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Cooling_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cooling" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "cooling" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Discharge_Air_Temperature_Cooling_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cool" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cool" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Discharge_Air_Velocity_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "velocity" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "velocity" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Effective_Zone_Air_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "zone" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "effective" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "effective" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "zone" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Entering_Hot_Water_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "entering" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "hot" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "hot" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "entering" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Entering_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "entering" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "entering" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Heating_Discharge_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "heating" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "heating" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Heating_Discharge_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "heating" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "heating" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Hot_Water_Differential_Pressure_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "hot" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "delta" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "delta" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "hot" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Leaving_Water_Flow_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "leaving" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "leaving" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Outside_Air_CO2_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "outside" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "quality" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "co2" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "co2" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "outside" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "quality" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Outside_Air_Flow_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "flow" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "outside" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "min" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "outside" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "flow" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "min" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Outside_Air_Lockout_Temperature_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "disable" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "outside" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "disable" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "outside" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Particulate_Matter_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "matter" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "quality" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "particulate" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "matter" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "particulate" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "quality" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Return_Air_CO2_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "return" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "co2" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "quality" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "return" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "co2" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "quality" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Run_Request_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "off" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "start" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "stop" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "run" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "run" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "start" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "stop" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "off" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Run_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "stop" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "run" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "start" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "off" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "run" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "start" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "stop" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "off" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Start_Stop_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "run" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "off" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "start" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "stop" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "stop" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "off" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "run" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "start" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Water_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "delta" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "differential" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "delta" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "differential" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

ph:HasTag-delta a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "delta" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-outside a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "outside" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-zone a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "zone" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-cmd a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "cmd" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-run a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "run" ;
            sh:path ph:hasMarkerTag ] .

brick:Chilled_Water_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "chilled" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "differential" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "delta" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "delta" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "differential" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "chilled" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Cooling_Discharge_Air_Temperature_Deadband_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cool" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "cooling" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cooling" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "cool" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Discharge_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "dewPoint" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "discharge" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "dewpoint" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "dewPoint" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "discharge" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "dewpoint" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Hot_Water_Differential_Pressure_Setpoint a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "hot" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "delta" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "differential" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "pressure" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "differential" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "delta" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "hot" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "pressure" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Hot_Water_Differential_Temperature_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "hot" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "entering" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "water" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "delta" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "delta" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "water" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "hot" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "entering" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ] .

brick:Lockout_Status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "economizing" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "outside" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "disable" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "status" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "disable" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "status" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "outside" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "economizing" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Outside_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "dewPoint" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "dewpoint" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "outside" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "dewpoint" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "dewPoint" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "outside" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:PM10_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "quality" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "matter" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "zone" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "particulate" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "zone" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "quality" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "matter" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "particulate" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:PM1_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "quality" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "zone" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "matter" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "particulate" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "matter" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "particulate" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "quality" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "zone" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:PM2.5_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "particulate" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "zone" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "matter" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "quality" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "quality" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "particulate" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "zone" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "matter" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Return_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "dewpoint" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "return" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "dewPoint" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "return" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "dewPoint" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "dewpoint" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

brick:Zone_Air_Dewpoint_Sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "air" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "dewpoint" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "temp" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "zone" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "sensor" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "point" ] ],
        [ a sh:PropertyShape ;
            sh:path ph:hasMarkerTag ;
            sh:qualifiedMinCount 1 ;
            sh:qualifiedValueShape [ sh:hasValue "dewPoint" ] ] ;
    sh:rule [ a sh:TripleRule ;
            sh:object "sensor" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "dewPoint" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "dewpoint" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object ph:Entity ;
            sh:predicate rdf:type ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "temp" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "air" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "point" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ],
        [ a sh:TripleRule ;
            sh:object "zone" ;
            sh:predicate ph:hasMarkerTag ;
            sh:subject sh:this ] .

ph:HasTag-humidity a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "humidity" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-discharge a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "discharge" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-status a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "status" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-pressure a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "pressure" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-flow a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "flow" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-water a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "water" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-temp a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "temp" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-sp a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "sp" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-air a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "air" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-sensor a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "sensor" ;
            sh:path ph:hasMarkerTag ] .

ph:HasTag-point a owl:Class,
        sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:hasValue "point" ;
            sh:path ph:hasMarkerTag ] .


@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix ph: <urn:project_haystack/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix : <urn:brick-haystack-xeto-rules#> .

<urn:brick-haystack-xeto-rules> a owl:Ontology ;
    sh:declare [
        sh:prefix "brick" ;
        sh:namespace "https://brickschema.org/schema/Brick#" ;
    ] ;
    sh:declare [
        sh:prefix "ph" ;
        sh:namespace "urn:project_haystack/" ;
    ] ;
    sh:declare [
        sh:prefix "rdf" ;
        sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#" ;
    ] ;
    sh:declare [
        sh:prefix "rdfs" ;
        sh:namespace "http://www.w3.org/2000/01/rdf-schema#" ;
    ] ;
    sh:declare [
        sh:prefix "sh" ;
        sh:namespace "http://www.w3.org/ns/shacl#" ;
    ] ;
    sh:declare [
        sh:prefix "xsd" ;
        sh:namespace "http://www.w3.org/2001/XMLSchema#" ;
    ] ;
    sh:declare [
        sh:prefix "ref"  ;
        sh:namespace "https://brickschema.org/schema/Brick/ref#"^^xsd:anyURI ;
    ] ;
    sh:declare [
        sh:prefix "bacnet"  ;
        sh:namespace "http://data.ashrae.org/bacnet/2020#"^^xsd:anyURI ;
    ] ;
    owl:imports <http://www.w3.org/ns/shacl>,
        <https://brickschema.org/schema/1.4/Brick> .

#
## this rule finds all ph:Entity with a bacnetConnRef reftag
## and inserts a new triple
:BACnetReferenceRule a sh:NodeShape ;
    sh:targetClass ph:Entity ;
    # needs to have bacnetConnRef ref tag
    #sh:property [
    #    sh:path ph:hasRefTag ;
    #    sh:qualifiedValueShape [
    #        sh:property [
    #            sh:path ph:key ;
    #            sh:hasValue "bacnetConnRef" ;
    #        ] ;
    #    ] ;
    #] ;

    sh:rule [
        a sh:SPARQLRule ;
        sh:prefixes <urn:brick-haystack-xeto-rules> ;
        sh:construct """
            CONSTRUCT {
                $this ref:hasExternalReference ?ref .
                ?ref a ref:BACnetReference .
                ?ref bacnet:object-identifier ?bacnet .
            } WHERE {
                $this ph:hasValueTag ?tag .
                ?tag ph:key "bacnetCur" .
                ?tag ph:value ?bacnet .
                FILTER NOT EXISTS { $this ref:hasExternalReference ?ref }
                BIND (URI(CONCAT("urn:uuid:", STRUUID())) AS ?ref)
            }
            """ ;
    ] .

